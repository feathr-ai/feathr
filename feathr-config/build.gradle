apply plugin: 'java'
apply plugin: 'pegasus'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: "com.vanniktech.maven.publish.base"

repositories {
  mavenCentral()
  mavenLocal()
  maven {
    url "https://repository.mulesoft.org/nexus/content/repositories/public/"
  }
  maven {
    url "https://linkedin.jfrog.io/artifactory/open-source/" // GMA, pegasus
  }
}

configurations {
  provided

  compileOnly.extendsFrom(provided)
  testImplementation.extendsFrom provided
}

dependencies {
  implementation project(":feathr-data-models")
  implementation project(path: ':feathr-data-models', configuration: 'dataTemplate')
  implementation spec.product.avro
  provided spec.product.pegasus.data
  implementation spec.product.typesafe_config
  implementation spec.product.log4j
  implementation spec.product.jsonSchemaVali
  implementation spec.product.jackson.jackson_databind
  implementation spec.product.mvel
  implementation spec.product.json

  testImplementation spec.product.testing
  testImplementation spec.product.mockito
  testImplementation spec.product.equalsverifier
  testImplementation spec.product.mockito_inline
}

test {
  maxParallelForks = 1
  forkEvery = 1
  // need to keep a lower heap size (TOOLS-296596)
  minHeapSize = "512m"
  useTestNG()
}

java {
  withSourcesJar()
  withJavadocJar()
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
  options.addStringOption('encoding', 'UTF-8')
  options.addStringOption('charSet', 'UTF-8')
}

// Required for publishing to local maven
publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId = 'feathr-config'
      from components.java
      versionMapping {
        usage('java-api') {
          fromResolutionOf('runtimeClasspath')
        }
        usage('java-runtime') {
          fromResolutionResult()
        }
      }
    }
  }
}
