{
  "$id": "FeatureDefConfigSchema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "sources": { "$ref": "#/sectionDefinitions/sourcesSection" },
    "anchors": { "$ref": "#/sectionDefinitions/anchorsSection" },
    "derivations": { "$ref": "#/sectionDefinitions/derivationsSection" },
    "advancedDerivations": { "$ref": "#/sectionDefinitions/advancedDerivations" },
    "features": { "$ref": "#/sectionDefinitions/featuresSection" },
    "dimensions": { "$ref": "#/sectionDefinitions/dimensionsSection" }
  },
  "additionalProperties": false,
  "basic": {
    "boolean": {
      "$comment": "define our own boolean type, which accepts json boolean or json string 'true/false'",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "enum": ["true", "True", "TRUE", "false", "False", "FALSE"]
        }
      ]
    },
    "stringOrStringList": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref":"#/basic/stringList"
        }
      ]
    },
    "stringList": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "stringMap": {
      "type": "object"
    },
    "fullyQualifiedClassName": {
      "type": "string"
    },
    "featureTypeEnum": {
      "enum": [
        "BOOLEAN",
        "NUMERIC",
        "CATEGORICAL",
        "CATEGORICAL_SET",
        "TERM_VECTOR",
        "VECTOR",
        "DENSE_VECTOR",
        "TENSOR"
      ]
    },
    "tensorCategoryEnum": {
      "enum": [
        "DENSE",
        "SPARSE",
        "RAGGED"
      ]
    },
    "featureType": {
      "oneOf": [
        {
          "$ref":"#/basic/featureTypeEnum"
        },
        {
          "$ref":"#/basic/complexFeatureType"
        }
      ]
    },
    "complexFeatureType": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type"],
      "properties": {
        "type": {
          "$ref":"#/basic/featureTypeEnum"
        },
        "tensorCategory": {
          "$ref":"#/basic/tensorCategoryEnum"
        },
        "shape": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "dimensionType": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "valType": {
          "type": "string"
        }
      }
    }
  },

  "source": {
    "type": "object",
    "sourceName": {
      "type": "string"
    },
    "HdfsPath": {
      "type": "string"
    },
    "slidingWindowAggregationConfig": {
      "oneOf" : [
        {
          "additionalProperties": false,
          "required": [
            "timestampColumn",
            "timestampColumnFormat"
          ],
          "properties": {
            "timestampColumn": {
              "type": "string"
            },
            "timestampColumnFormat": {
              "type": "string"
            }
          }
        },
        {
          "additionalProperties": false,
          "required": [
            "timestamp",
            "timestamp_format"
          ],
          "properties": {
            "timestamp": {
              "type": "string"
            },
            "timestamp_format": {
              "type": "string"
            }
          }
        }
      ]
    },

    "HdfsConfig": {
      "type": "object",
      "required": ["location"],
      "properties": {
        "type": {
          "enum": [ "HDFS"]
        },
        "location": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "timePartitionPattern" : {
          "type" : "string"
        },
        "hasTimeSnapshot": {
          "$ref": "#/basic/boolean"
        },
        "isTimeSeries": {
          "$ref": "#/basic/boolean"
        },
        "timeWindowParameters": { "$ref": "#/source/slidingWindowAggregationConfig" }
      },
      "additionalProperties": false
    },

    "EspressoConfig": {
      "type": "object",
      "required": ["type", "database", "table", "d2Uri", "keyExpr"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "enum": [
            "ESPRESSO"
          ]
        },
        "database": {
          "type": "string"
        },
        "table": {
          "type": "string"
        },
        "d2Uri": {
          "$ref": "#/source/D2URL"
        },
        "keyExpr": {"$ref":"#/anchor/MVELExpr"}
      }
    },

    "D2URL": {
      "type": "string",
      "pattern": "^d2://.*"
    },

    "VeniceConfig": {
      "type": "object",
      "required": ["type", "storeName", "keyExpr"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "enum": [
            "VENICE"
          ]
        },
        "storeName": {
          "type": "string"
        },
        "keyExpr": {"$ref":"#/anchor/MVELExpr"}
      }
    },

    "RocksDBConfig": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "referenceSource", "extractFeatures", "encoder", "decoder"],
      "properties": {
        "type": {
          "enum": [
            "ROCKSDB"
          ]
        },
        "referenceSource": {
          "type": "string"
        },
        "extractFeatures": {
          "$ref": "#/basic/boolean"
        },
        "encoder": {
          "type": "string"
        },
        "decoder": {
          "type": "string"
        },
        "keyExpr": {
          "type": "string"
        }
      }
    },

    "KafkaConfig": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type", "stream"],
      "properties": {
        "type": {
          "enum": [
            "KAFKA"
          ]
        },
        "stream": {
          "type": "string"
        },
        "isTimeSeries": {
          "$ref": "#/basic/boolean"
        },
        "timeWindowParameters": { "$ref": "#/source/slidingWindowAggregationConfig" }
      }
    },

    "PassThroughConfig": {
      "type": "object",
      "additionalProperties": false,
      "required": ["type"],
      "properties": {
        "type": {
          "enum": [
            "PASSTHROUGH"
          ]
        },
        "dataModel": {
          "type": "string"
        }
      }
    },

    "CouchbaseConfig": {
      "type": "object",
      "required": ["type", "bucketName", "keyExpr", "documentModel"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "enum": [
            "COUCHBASE"
          ]
        },
        "bucketName": {
          "type": "string"
        },
        "keyExpr": {"$ref":"#/anchor/MVELExpr"},
        "bootstrapUris": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "documentModel": {
          "type": "string"
        }
      }
    },
    "CustomSourceConfig": {
      "type": "object",
      "required": ["type", "keyExpr", "dataModel"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "enum": [
            "CUSTOM"
          ]
        },
        "keyExpr": {"$ref":"#/anchor/MVELExpr"},
        "dataModel": {
          "type": "string"
        }
      }
    },

    "RestLiConfig": {
      "type": "object",
      "required": ["type", "restResourceName"],
      "propertyNames": {"enum": ["finder", "keyExpr", "pathSpec", "restReqParams", "restResourceName", "restEntityType", "type"]},
      "allOf": [
        {
          "properties": {
            "type": {
              "enum": [ "RESTLI" ]
            },
            "restResourceName": {
              "type": "string"
            },
            "restReqParams": {
              "$ref": "#/source/RestLiConfig/RestReqParams"
            },
            "pathSpec": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              ]
            }
          }
        },
        {
          "oneOf": [
            {
              "$ref": "#/source/RestLiConfig/RestLiEntityType"
            },
            {
              "anyOf": [
                {
                  "$ref": "#/source/RestLiConfig/RestLiKeyExpr"
                },
                {
                  "$ref": "#/source/RestLiConfig/RestLiFinder"
                }
              ]
            }

          ]
        }
      ],
      "RestLiFinder": {
        "required": ["finder"],
        "properties": {
          "finder": {
            "type": "string"
          }
        }
      },
      "RestLiKeyExpr": {
        "required": ["keyExpr"],
        "properties": {
          "keyExpr": {
            "$ref": "#/anchor/MVELExpr"
          }
        }
      },
      "RestLiEntityType": {
        "required": ["restEntityType"],
        "properties": {
          "restEntityType": {
            "type": "string"
          }
        }
      },
      "RestReqParams": {
        "type": "object",
        "additionalProperties": false,
        "patternProperties": {
          "^([a-zA-Z].*)$": {
            "$ref": "#/source/RestLiConfig/RestReqParams/reqParam"

          }
        },
        "reqParam": {
          "$comment": "cannot declare this as type = object, otherwise will introduce extra layer of object when ref it and cause error",
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "json": {
                  "$ref": "#/source/JSONObject"
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "jsonArray": {
                  "type": "string"
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "mvel": {
                  "type": "string"
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "file": {
                  "type": "string"
                }
              }
            }
          ]
        }
      }
    },

    "PinotConfig": {
      "type": "object",
      "required": ["type", "resourceName", "queryTemplate", "queryArguments", "queryKeyColumns"],
      "additionalProperties": false,
      "properties": {
        "type": {
          "enum": [
            "PINOT"
          ]
        },
        "resourceName": {
          "type": "string"
        },
        "queryTemplate": {
          "type": "string"
        },
        "queryArguments": {
          "type": "array",
          "items": {
            "$ref": "#/anchor/MVELExpr"
          }
        },
        "queryKeyColumns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },

    "JSONObject": {
      "type": "string"
    },
    "JSONArray": {
      "type": "string"
    }
  },

  "anchor": {
    "anchorConfig": {
      "type": "object",
      "$comment":"use allOf and properties achieve combination/inheritance, since we use allOf, we can not use additionalProperties = false, instead, we use propertyNames, see https://github.com/json-schema-org/json-schema-org.github.io/issues/77",
      "propertyNames": {"enum": ["source", "features", "keyExtractor", "extractor", "key", "keyAlias", "transformer", "extract", "lateralViewParameters"]},
      "allOf": [
        {
          "properties": {
            "source": {
              "$ref": "#/source/sourceName"
            }
          },
          "required": ["source"]
        },
        {
          "oneOf": [
            {
              "$ref": "#/anchor/featuresWithKey"
            },
            {
              "$ref": "#/anchor/featuresWithExtractor"
            }
          ]
        }
      ]
    },
    "featuresWithKey": {
      "type": "object",
      "required": ["features"],
      "$comment": "featuresWithKey does not allow transformer or extractor",
      "properties": {
        "transformer": { "not" : {} },
        "extractor": { "not": {} },
        "key": {
          "$ref": "#/anchor/defExpr"
        },
        "keyAlias": {
          "$ref": "#/basic/stringOrStringList"
        },
        "keyExtractor": {
          "type": "string"
        },
        "lateralViewParameters": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "lateralViewItemAlias",
            "lateralViewDef"
          ],
          "properties": {
            "lateralViewDef": {
              "type": "string"
            },
            "lateralViewItemAlias": {
              "type": "string"
            }
          }
        },
        "features": {
          "type": "object",
          "patternProperties": {
            "^([a-zA-Z].*)$": {
              "$ref": "#/anchor/featureKConfig"
            }
          }
        }
      }
    },

    "featuresWithExtractor": {
      "type": "object",
      "required": ["features"],
      "$comment": "need to include 'souce' as well, although this belongs to upper level",
      "propertyNames": {"enum": ["extractor", "extract", "features", "key", "keyAlias", "keyExtractor", "source", "transformer"]},
      "allOf": [
        {
          "oneOf": [
            {
              "required": ["transformer"],
              "properties": {
                "transformer": {
                  "type": "string"
                }
              }
            },
            {
              "required": ["extractor"],
              "properties": {
                "extractor": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "required": ["class"],
                      "propertyNames": {"enum": ["class", "params"]},
                      "properties": {
                        "class": {
                          "type": "string"
                        },
                        "params": {
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "properties": {
            "key": {
              "$ref": "#/anchor/defExpr"
            },
            "keyAlias": {
              "$ref": "#/basic/stringOrStringList"
            },
            "keyExtractor": {
              "type": "string"
            },
            "features": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "object",
                  "patternProperties": {
                    "^([a-zA-Z].*)$": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "def": {
                          "$ref": "#/anchor/defExpr"
                        },
                        "default": {
                          "$ref":"#/anchor/defaultValue"
                        },
                        "type": {
                          "$ref": "#/basic/featureType"
                        },
                        "parameters": {
                          "$ref": "#/basic/stringMap"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "patternProperties": {
                    "^([a-zA-Z].*)$": {
                      "$ref":"#/anchor/simpleFeatureKConfig"
                    }
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "defExpr": {
      "oneOf": [
        {
          "$ref": "#/anchor/validExpr"
        },
        {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "sqlExpr": {
              "$ref": "#/anchor/validExpr"
            },
            "mvel": {
              "$ref": "#/anchor/MVELExpr"
            }
          }
        }
      ]
    },
    "validExpr" : {
      "oneOf": [
        {
          "$ref": "#/basic/stringOrStringList"
        },
        {
          "type":"number"
        },
        {
          "type":"boolean"
        }
      ]
    },
    "featureKConfig": {
      "$comment":" Don't declare this as type = object, otherwise, it will fail because of having this extra 'level' of object",
      "oneOf": [
        {
          "$ref":"#/anchor/simpleFeatureKConfig"
        },
        {
          "$ref":"#/anchor/complexFeatureKConfig"
        },
        {
          "$ref":"#/anchor/nearLineFeatureKConfig"
        }
      ]
    },
    "simpleFeatureKConfig": {
      "$ref":"#/anchor/MVELExpr"
    },
    "complexFeatureKConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "def": {
          "$ref": "#/anchor/defExpr"
        },
        "type": {
          "$ref": "#/basic/featureType"
        },
        "default": {
          "$ref":"#/anchor/defaultValue"
        },
        "aggregation": {
          "enum": ["SUM", "COUNT", "MAX", "MIN", "AVG", "LATEST", "AVG_POOLING", "MAX_POOLING", "MIN_POOLING"]
        },
        "window": {
          "$ref":"#/anchor/durationPattern"
        },
        "filter": {
          "type":"string"
        },
        "groupBy": {
          "type":"string"
        },
        "limit": {
          "type":"integer"
        },
        "embeddingSize": {
          "type": "integer"
        }
      }
    },
    "nearLineFeatureKConfig": {
      "type": "object",
      "required": ["windowParameters"],
      "additionalProperties": false,
      "properties": {
        "def": {
          "$ref": "#/anchor/defExpr"
        },
        "aggregation": {
          "enum": ["SUM", "COUNT", "MAX", "AVG", "AVG_POOLING", "MAX_POOLING", "MIN_POOLING"]
        },
        "windowParameters": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "type": {
              "enum": ["SLIDING", "FIXED", "SESSION"]
            },
            "size": {
              "$ref":"#/anchor/durationPattern"
            },
            "slidingInterval": {
              "$ref":"#/anchor/durationPattern"
            }
          }
        },
        "groupBy": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/basic/stringList"
            }
          ]
        },
        "filter": {
          "$ref": "#/anchor/defExpr"
        }
      }
    },
    "MVELExpr": {
      "type": "string"
    },
    "durationPattern": {
      "type": "string",
      "pattern": "^(\\s*)(\\d)+(d|day|days|h|hour|hours|m|minute|minutes|s|second|seconds)(\\s*)$"
    },
    "defaultValue": {
      "$comment": "intentionally left empty"
    }
  },
  "derivation": {
    "type": "object",
    "properties": {
    },
    "advancedDerivedFeature": {
      "type": "object",
      "required": ["features", "class", "key", "inputs"],
      "additionalProperties": false,
      "properties": {
        "features": {
          "$ref": "#/basic/stringOrStringList"
        },
        "class": {
          "oneOf": [
            {
              "$ref":"#/derivation/advancedDerivedFunction"
            },
            {
              "type": "string"
            }
          ]
        },
        "key": {
          "$ref": "#/basic/stringOrStringList"
        },
        "inputs": {
          "oneOf": [
            {
              "enum": ["PROVIDED_BY_CLASS"]
            },
            {
              "$ref": "#/derivation/inputsObj"
            }]
        }
      }
    },
    "derivationConfig": {
      "oneOf": [
        {
          "$ref": "#/anchor/MVELExpr"
        },
        {
          "$ref": "#/derivation/derivationConfigWithSqlExpr"
        },
        {
          "$ref": "#/derivation/derivationConfigWithExtractor"
        },
        {
          "$ref": "#/derivation/derivationConfigWithExpr"
        },
        {
          "$ref": "#/derivation/derivationConfigForSequentialJoin"
        }
      ]
    },
    "derivationConfigWithSqlExpr": {
      "type": "object",
      "required": ["sqlExpr"],
      "additionalProperties": false,
      "properties": {
        "sqlExpr": {
          "type": "string"
        },
        "type": {
          "$ref": "#/basic/featureType"
        }
      }
    },
    "derivationConfigWithExpr": {
      "type": "object",
      "required": ["definition"],
      "additionalProperties": false,
      "properties": {
        "definition": {
          "$ref": "#/anchor/defExpr"
        },
        "key": {
          "$ref": "#/basic/stringOrStringList"
        },
        "inputs": {
          "$ref":"#/derivation/inputsObj"
        },
        "type": {
          "$ref": "#/basic/featureType"
        }
      }
    },
    "inputsObj": {
      "type": "object",
      "patternProperties": {
        "^([a-zA-Z].*)$":  { "$ref": "#/derivation/keyedFeature" }
      }
    },
    "inputsList": {
      "type":"array",
      "items": {
        "$ref":"#/derivation/keyedFeature"
      }
    },
    "advancedDerivedFunction" : {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "UDF": {
      "$ref":"#/anchor/MVELExpr"
    },
    "derivationConfigWithExtractor": {
      "type": "object",
      "additionalProperties": false,
      "required": ["key", "inputs", "class"],
      "properties": {
        "key": {
          "oneOf": [
            {
              "$ref":"#/anchor/MVELExpr"
            },
            {
              "$ref":"#/basic/stringList"
            }
          ]
        },
        "inputs": {
          "oneOf": [
            {
              "$ref": "#/derivation/inputsList"
            },
            {
              "$ref": "#/derivation/inputsObj"
            }
          ]
        },
        "class": {
          "$ref":"#/basic/fullyQualifiedClassName"
        },
        "type": {
          "$ref": "#/basic/featureType"
        }
      }
    },
    "derivationConfigForSequentialJoin": {
      "type": "object",
      "required": ["key", "join", "aggregation"],
      "additionalProperties": false,
      "properties": {
        "key": {
          "$ref": "#/basic/stringOrStringList"
        },
        "join": {
          "$ref": "#/derivation/sequentialJoinObj"
        },
        "aggregation": {
          "$comment": "need to support empty string, as the aggregation is not supported in frame-offline, as the aggregation is not supported in frame-offline, and empty string is used as a placeholder",
          "enum": ["UNION", "SUM", "AVG", "MAX", "MIN", "ELEMENTWISE_MAX", "ELEMENTWISE_MIN", "ELEMENTWISE_AVG", "", "ELEMENTWISE_SUM"]
        },
        "type": {
          "$ref": "#/basic/featureType"
        }
      }
    },
    "sequentialJoinObj": {
      "type": "object",
      "required": ["base", "expansion"],
      "additionalProperties": false,
      "properties": {
        "base": {
          "$ref": "#/derivation/baseFeature"
        },
        "expansion": {
          "$ref": "#/derivation/keyedFeature"
        }
      }
    },
    "baseFeature": {
      "type": "object",
      "required": ["key", "feature"],
      "additionalProperties": false,
      "properties": {
        "key": {
          "$ref": "#/basic/stringOrStringList"
        },
        "feature": {
          "type": "string"
        },
        "outputKey": {
          "$ref": "#/basic/stringOrStringList"
        },
        "transformation": {
          "$ref": "#/anchor/validExpr"
        },
        "transformationClass": {
          "$ref":"#/basic/fullyQualifiedClassName"
        }
      },
      "oneOf": [
        {
          "$comment": "if transformation is present, outputKey should also be present",
          "required": ["outputKey", "transformation"]
        },
        {
          "$comment": "if transformationClass is present, outputKey should also be present",
          "required": ["outputKey", "transformationClass"]
        },
        {
          "$comment": "Otherwise, neither transformation or transformationClass should be present",
          "allOf": [
            {"not": { "required" :["transformation"]}},
            {"not": { "required" :["transformationClass"]}}
          ]
        }
      ]
    },
    "keyedFeature": {
      "type": "object",
      "required": ["key", "feature"],
      "additionalProperties": false,
      "properties": {
        "key": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "#/basic/stringList"
            }
          ]
        },
        "feature": {
          "type":"string"
        }
      }
    }
  },
  "sectionDefinitions": {
    "sourcesSection": {
      "type": "object",
      "properties": {
      },
      "patternProperties": {
        "^([a-zA-Z].*)$":  {
          "type": "object",
          "oneOf": [
            {
              "$ref": "#/source/HdfsConfig"
            },
            {
              "$ref": "#/source/EspressoConfig"
            },
            {
              "$ref": "#/source/RestLiConfig"
            },
            {
              "$ref": "#/source/VeniceConfig"
            },
            {
              "$ref": "#/source/RocksDBConfig"
            },
            {
              "$ref": "#/source/KafkaConfig"
            },
            {
              "$ref": "#/source/PassThroughConfig"
            },
            {
              "$ref": "#/source/CouchbaseConfig"
            },
            {
              "$ref": "#/source/CustomSourceConfig"
            },
            {
              "$ref": "#/source/PinotConfig"
            }
          ]
        }
      },
      "additionalProperties": false
    },

    "anchorsSection": {
      "type": "object",
      "patternProperties": {
        "^([a-zA-Z].*)$":  {
          "$ref": "#/anchor/anchorConfig"
        }
      },
      "additionalProperties": false
    },
    "derivationsSection": {
      "type": "object",
      "patternProperties": {
        "^(.*)":  {
          "$ref": "#/derivation/derivationConfig"
        }
      },
      "additionalProperties": false
    },

    "advancedDerivations": {
      "type": "array",
      "items": {
        "$ref":"#/derivation/advancedDerivedFeature"
      }
    },

    "featuresSection": {
      "$comment": "TO BE DONE",
      "type": "object"
    },

    "dimensionsSection": {
      "$comment": "TO BE DONE",
      "type": "object"
    }
  }
}