namespace com.linkedin.feathr.compute

/**
 * Lateral view is used in conjunction with table generating functions (eg. the most commonly used explode()), which typically generates zero or more output rows for each input row. A lateral view first applies the table generating function to each row of base table, and then joins resulting output rows to the input rows to form a virtual table with the supplied table alias. For more details and examples, refer to https://cwiki.apache.org/confluence/display/Hive/LanguageManual+LateralView.
 */
record LateralView {

  /**
   * A table-generating function transforms a single input row to multiple output rows. For example, explode(array('A','B','C') will produce 3 one-column rows, which are row1: 'A'; row2: 'B'; row3: 'C'.
   */
  tableGeneratingFunction: union[
    // SparkSql-based expression. One of the most common lateral view operation is explode, for example, explode(features).
    SqlExpression
  ]

  /**
   * Represents the alias for referencing the generated virtual table. It will be used in subsequent statements (eg. filter, groupBy) in the sliding window feature definition.
   */
  virtualTableAlias: string
}
