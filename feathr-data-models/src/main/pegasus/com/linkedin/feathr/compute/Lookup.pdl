// LINT_SUPPRESS: namespace.three.parts

namespace com.linkedin.feathr.compute

/**
 * A node to represent a feature which is to be computed by using an already computed feature as the key.
 * https://iwww.corp.linkedin.com/wiki/cf/pages/viewpage.action?spaceKey=ENGS&title=feathr+Offline+User+Guide#FrameOfflineUserGuide-sequentialjoin
 */
record Lookup includes AbstractNode {

  /**
   * An array of references to a node and keys.
   *
   * For now, we do not support lookup of just a key reference, but we have added that as a placeholder.
   *
   * A node reference consists of node id and a key reference.
   * In sequential join the lookup key would be a combination of the
   * feature node representing the base feature (lookup node) and the key associated with it. For example,:-
   * seqJoinFeature: {
   *  base: {key: x, feature: baseFeature}
   *  expansion: {key: y, feature: expansionFeature}
   *  aggregation: UNION
   * }
   * Here, the lookupKey's node reference would point to the node which computes the base feature, and the keyReference would
   * point to the index of "x" in the key array of baseFeature.
   */
  lookupKey: array[union[NodeReference, KeyReference]]

  /**
   * The node id of the node containing the expansion feature.
   */
  lookupNode: NodeId

  /**
   * Aggregation type as listed in
   * https://jarvis.corp.linkedin.com/codesearch/result/
   * ?name=FeatureAggregationType.java&path=feathr-common%2Fframe-common%2Fsrc%2Fmain%2Fjava%2Fcom%2Flinkedin%2Fframe%2Fcommon&reponame=feathr%2Fframe-common#7
   *
   */
  aggregation: string

  /**
   * feature name of the feature which would be computed.
   * we need feature name here for 2 main reasons.
   * 1. For type information. There are existing APIs that create a map from feature name -> type info from FR model and
   * we want to leverage that.
   * 2. For default values. Similar to above, there are existing APIs which create default value map from feature name ->
   * default value.
   */
  featureName: string

  /**
   * feature version of the feature
   */
  featureVersion: FeatureVersion
}