anchors: {
  anchor1: {
    source: "anchor1-source.csv"
    key: "mId"
    features: {
      a_isBanana: "alpha == 'banana'"
      a_betaMinusGamma: "beta - gamma"
      anchoredF1: "toNumeric(omega)"
      a_omega_logA: "Math.log(toNumeric(omega))"
    }
  }

  anchor2: {
    source: "anchor2-source.csv"
    key: "entityId"
    features: {
      f2: {
        def: "(Float)x"
        type: "NUMERIC"
      }
      a_y: {
        def: "(Float)y"
        type: "NUMERIC"
      }
    }
  }

  foobar-extra-anchor: {
    source: "anchor2-source.csv"
    key: "entityId"
    features: {
      a_sum: {
        def: "(Float)z"
        type: "NUMERIC"
      }
    }
  }

  anchor3: {
    source: "anchor3-source.csv"
    key: "Id"
    features: {
      f1: {
        def: "(Float)p"
        type: "NUMERIC"
      }
    }
  }

  anchor4: {
    source: "anchor4-source.csv"
    key: ["sourceId", "destId"]
    features: {
      fromValueFeature: {
        def: "toNumeric(fromValue)",
        type: "NUMERIC"
      }
    }
  }

  anchor5: {
    source: "nullValue-source3.avro.json"
    key: "mId"
    features: {
      featuresWithNullNameTerm: {
        def: "features.feature1"
        default: {"term_default": 0}
      }
      featuresWithNullSingleTerm: {
        def: "features.feature1"
        default: "term_default"
      }
    }
  }

  anchor6: {
    source: "nullValue-source3.avro.json"
    key: "mId"
    features: {
      featuresWithEmptyMap: {
        def: "features.feature2"
        default: {"term_default": 0}
      }
    }
  }
}

derivations: {
  a_simple_derived_feature: "f2 > 50"

  foobar_dualkey_feature: {
    key: [mId, jId]
    inputs: {
      arg0: { key: mId, feature: f2 }
      arg1: { key: jId, feature: f1 }
    }
    definition: "(isPresent(arg0) && isPresent(arg1))? arg0 * arg1 : null"
  }

  foobar_dualkey_feature2: {
    key: [x, Id]
    inputs: {
      a0: { key: [x, Id], feature: foobar_dualkey_feature }
      a1: { key: [x], feature: a_y }
    }
    definition: "(isPresent(a0) && isPresent(a1))? a0 / a1 : null"
  }

  derivedF1: "isPresent(anchoredF1) ? Math.log(anchoredF1) : null"

  multi_key_simple_mvel_feature: "isPresent(fromValueFeature) ? Math.abs(fromValueFeature) : null"

}